<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Counties+v8 Extract' inline='true' name='federated.0w6eit40uriekx18reate18lvfo9' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='dataengine.0dqjfqb0azcfgj1gsim2q0s98krm'>
            <connection class='dataengine' dbname='C:\Users\a.dimitrova\Github\datavisTAR\data\ukMapTableau\Counties+v8.tde' schema='Extract' tablename='Extract'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.0dqjfqb0azcfgj1gsim2q0s98krm' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <family>nodes#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>72118</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>50.201800429999999</statistic>
              <statistic aggregation='Max' datatype='real'>55.189009749999997</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <family>nodes#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>72123</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>-4.6806672420000002</statistic>
              <statistic aggregation='Max' datatype='real'>1.762979399</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ONS Code (New)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ONS Code (New)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ONS Code (New)</remote-alias>
            <ordinal>3</ordinal>
            <family>attributes#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>27</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;E10000002&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;E10000034&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ONS Code (Old)</remote-name>
            <remote-type>16</remote-type>
            <local-name>[ONS Code (Old)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ONS Code (Old)</remote-alias>
            <ordinal>4</ordinal>
            <family>attributes#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>27</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>11</statistic>
              <statistic aggregation='Max' datatype='integer'>47</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointID</remote-name>
            <remote-type>2</remote-type>
            <local-name>[PointID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PointID</remote-alias>
            <ordinal>5</ordinal>
            <family>nodes#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6702</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>6702</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PolygonID</remote-name>
            <remote-type>16</remote-type>
            <local-name>[PolygonID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>PolygonID</remote-alias>
            <ordinal>6</ordinal>
            <family>attributes#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>27</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>27</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <family>attributes#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>27</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Buckinghamshire&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Worcestershire&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubPolygonID</remote-name>
            <remote-type>16</remote-type>
            <local-name>[SubPolygonID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SubPolygonID</remote-alias>
            <ordinal>8</ordinal>
            <family>attributes#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>44</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>44</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[ONS Code (Old)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[nodes#csv_shapeid]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[shapeid]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.609959' measure-ordering='alphabetic' measure-percentage='0.390042' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Counties+v8 Extract' name='federated.0w6eit40uriekx18reate18lvfo9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w6eit40uriekx18reate18lvfo9'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[PointID]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[PolygonID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[SubPolygonID]' role='dimension' type='ordinal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointID]' derivation='None' name='[none:PointID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PolygonID]' derivation='None' name='[none:PolygonID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[SubPolygonID]' derivation='None' name='[none:SubPolygonID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0w6eit40uriekx18reate18lvfo9].[none:Region:nk]' />
              <lod column='[federated.0w6eit40uriekx18reate18lvfo9].[none:PolygonID:ok]' />
              <lod column='[federated.0w6eit40uriekx18reate18lvfo9].[none:SubPolygonID:ok]' />
              <path column='[federated.0w6eit40uriekx18reate18lvfo9].[none:PointID:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w6eit40uriekx18reate18lvfo9].[avg:Latitude:qk]</rows>
        <cols>[federated.0w6eit40uriekx18reate18lvfo9].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w6eit40uriekx18reate18lvfo9].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      NO5wxb3j/wMNAIdqWyt3UwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
